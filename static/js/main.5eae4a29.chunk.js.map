{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["MoviePoster","poster","alt","imgSrc","src","title","className","Movie","overview","text","maxLine","ellipsis","trimRight","basedOn","App","state","_renderMovies","movies","map","movie","poster_path","key","id","_getMovies","a","_callApi","setState","fetch","process","then","response","json","results","catch","err","console","log","this","Component","ReactDOM","render","document","getElementById"],"mappings":"sVA2BA,SAASA,EAAT,GAAuC,IAAhBC,EAAe,EAAfA,OAAQC,EAAO,EAAPA,IACvBC,EAAM,yCAAqCF,GACjD,OAAO,yBAAKG,IAAKD,EAAQD,IAAKA,EAAKG,MAAOH,EAAKI,UAAU,kBAc5CC,MAtCf,YAA6C,IAA5BF,EAA2B,EAA3BA,MAAOJ,EAAoB,EAApBA,OAAQO,EAAY,EAAZA,SAC9B,OACE,yBAAKF,UAAU,SACb,yBAAKA,UAAU,iBACb,kBAACN,EAAD,CAAaC,OAAQA,EAAQC,IAAKG,KAEpC,yBAAKC,UAAU,iBACb,4BAAKD,GACL,yBAAKC,UAAU,mBACb,kBAAC,IAAD,CACEG,KAAMD,EACNE,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,YACP,QCkCEC,E,2MA9CbC,MAAQ,G,EAMRC,cAAgB,WAWd,OAVe,EAAKD,MAAME,OAAOC,KAAI,SAAAC,GACnC,OACE,kBAAC,EAAD,CACEd,MAAOc,EAAMd,MACbJ,OAAQkB,EAAMC,YACdC,IAAKF,EAAMG,GACXd,SAAUW,EAAMX,e,EAOxBe,W,sBAAa,4BAAAC,EAAA,sEACU,EAAKC,WADf,OACLR,EADK,OAEX,EAAKS,SAAS,CACZT,WAHS,2C,EAObQ,SAAW,WACT,OAAOE,MAAM,wDAAD,OAC8CC,qCAEvDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAIA,EAAKC,WAClBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,mFA9B5BG,KAAKd,e,+BAiCG,IACAN,EAAWoB,KAAKtB,MAAhBE,OACR,OACE,yBAAKX,UAAWW,EAAS,MAAQ,gBAC9BA,EAASoB,KAAKrB,gBAAkB,e,GA5CvBsB,aCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.5eae4a29.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport LinesEllipsis from 'react-lines-ellipsis';\r\nimport './Movie.css';\r\n\r\nfunction Movie({ title, poster, overview }) {\r\n  return (\r\n    <div className=\"Movie\">\r\n      <div className=\"Movie__Column\">\r\n        <MoviePoster poster={poster} alt={title} />\r\n      </div>\r\n      <div className=\"Movie__Column\">\r\n        <h1>{title}</h1>\r\n        <div className=\"Movie__Overview\">\r\n          <LinesEllipsis\r\n            text={overview}\r\n            maxLine=\"6\"\r\n            ellipsis=\"...\"\r\n            trimRight\r\n            basedOn=\"letters\"\r\n          />{' '}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MoviePoster({ poster, alt }) {\r\n  const imgSrc = `https://image.tmdb.org/t/p/w500${poster}`;\r\n  return <img src={imgSrc} alt={alt} title={alt} className=\"Movie__Poster\" />;\r\n}\r\n\r\nMovie.propTypes = {\r\n  title: propTypes.string.isRequired,\r\n  poster: propTypes.string.isRequired,\r\n  overview: propTypes.string.isRequired\r\n};\r\n\r\nMoviePoster.propTypes = {\r\n  poster: propTypes.string.isRequired,\r\n  alt: propTypes.string.isRequired\r\n};\r\n\r\nexport default Movie;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Movie from './Movie';\r\n\r\nclass App extends Component {\r\n  // Render: componentWillMount() -> render() -> componentDidMound()\r\n  // Update: componentWillReceiveProps() -> shouldComponentUpdate() == true -> componentWillUpdate() -> render() -> componentDidUpdate()\r\n\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this._getMovies();\r\n  }\r\n\r\n  _renderMovies = () => {\r\n    const movies = this.state.movies.map(movie => {\r\n      return (\r\n        <Movie\r\n          title={movie.title}\r\n          poster={movie.poster_path}\r\n          key={movie.id}\r\n          overview={movie.overview}\r\n        />\r\n      );\r\n    });\r\n    return movies;\r\n  };\r\n\r\n  _getMovies = async () => {\r\n    const movies = await this._callApi();\r\n    this.setState({\r\n      movies\r\n    });\r\n  };\r\n\r\n  _callApi = () => {\r\n    return fetch(\r\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.REACT_APP_THEMOVIE_DB_API_KEY}`\r\n    )\r\n      .then(response => response.json())\r\n      .then(json => json.results)\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n    return (\r\n      <div className={movies ? 'App' : 'App--loading'}>\r\n        {movies ? this._renderMovies() : 'Loading'}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}